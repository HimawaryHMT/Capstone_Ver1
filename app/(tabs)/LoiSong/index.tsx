import ArticleCard from '@/components/component_LoiSong/ArticleCard';
import HealthCheckCard from '@/components/component_LoiSong/HealthCheckCard';
import RecipeCard from '@/components/component_LoiSong/RecipeCard';
import SectionHeader from '@/components/component_LoiSong/SectionHeader';
import TabBar from '@/components/component_LoiSong/TabBar';
import TipCard from '@/components/component_LoiSong/TipCard';
import VideoCard from '@/components/component_LoiSong/VideoCard';
import { useRouter } from 'expo-router';
import React, { useState } from 'react';
import { ScrollView, StatusBar, StyleSheet, Text, View } from 'react-native';
import { SafeAreaView } from 'react-native-safe-area-context';

const TABS = [
    { id: 'all', label: 'T·∫§T C·∫¢' },
    { id: 'sleep', label: 'Ng·ªß ngon h∆°n' },
    { id: 'health-check', label: 'Ki·ªÉm tra s·ª©c kh·ªèe' },
    { id: 'articles', label: 'B√†i vi·∫øt' },
    { id: 'health-tips', label: 'M·∫πo s·ª©c kh·ªèe' },
    { id: 'recipes', label: 'C√¥ng th·ª©c n·∫•u ƒÉn' },
];

const SLEEP_VIDEOS = [
    { id: '1', title: 'Nh·ªãp sinh h·ªçc', backgroundColor: '#4a5568' },
    { id: '2', title: 'Kho·∫£nh kh·∫Øc ho√†n h·∫£o', backgroundColor: '#6b7280' },
    { id: '3', title: '√Çm thanh th∆∞ gi√£n', backgroundColor: '#8b5a6f' },
    { id: '4', title: 'Thi·ªÅn ƒë·ªãnh', backgroundColor: '#7c3aed' },
    { id: '5', title: 'H∆°i th·ªü s√¢u', backgroundColor: '#059669' },
    { id: '6', title: 'Th∆∞ gi√£n c∆° b·∫Øp', backgroundColor: '#dc2626' },
];

const HEALTH_CHECKS = [
    {
        id: '1',
        title: 'T·ª± ƒë√°nh gi√° s·ª©c kh·ªèe tim m·∫°ch',
        subtitle: 'Tim m·∫°ch',
        duration: '2 Min',
        questions: '6 C√¢u h·ªèi',
        icon: '‚ù§Ô∏è',
        backgroundColor: '#bfdbfe',
    },
    {
        id: '2',
        title: 'T·ª± ki·ªÉm tra ch·ª©ng lo·∫°n nh·ªãp tim',
        subtitle: 'Nh·ªãp tim',
        duration: '3 Min',
        questions: '9 C√¢u h·ªèi',
        icon: 'üìä',
        backgroundColor: '#c7d2fe',
    },
    {
        id: '3',
        title: 'T·ª± ki·ªÉm tra huy·∫øt √°p tim m·∫°ch',
        subtitle: 'Huy·∫øt √°p',
        duration: '3 Min',
        questions: '8 C√¢u h·ªèi',
        icon: 'ü©∫',
        backgroundColor: '#ddd6fe',
    },
    {
        id: '4',
        title: 'ƒê√°nh gi√° nguy c∆° ti·ªÉu ƒë∆∞·ªùng',
        subtitle: 'ƒê∆∞·ªùng huy·∫øt',
        duration: '4 Min',
        questions: '10 C√¢u h·ªèi',
        icon: 'üíâ',
        backgroundColor: '#fce7f3',
    },
    {
        id: '5',
        title: 'Ki·ªÉm tra s·ª©c kh·ªèe gan',
        subtitle: 'Gan',
        duration: '5 Min',
        questions: '12 C√¢u h·ªèi',
        icon: 'ü´Å',
        backgroundColor: '#fed7aa',
    },
    {
        id: '6',
        title: 'ƒê√°nh gi√° stress v√† lo √¢u',
        subtitle: 'T√¢m l√Ω',
        duration: '3 Min',
        questions: '7 C√¢u h·ªèi',
        icon: 'üß†',
        backgroundColor: '#d1fae5',
    },
];

const ARTICLES = [
    {
        id: '1',
        title: 'Huy·∫øt √°p',
        subtitle: '27 Th√¥ng tin chi ti·∫øt',
        backgroundColor: '#3F8F75',
        icon: 'ü©∫',
    },
    {
        id: '2',
        title: 'ƒê∆∞·ªùng huy·∫øt',
        subtitle: '11 Th√¥ng tin chi ti·∫øt',
        backgroundColor: '#fb923c',
        icon: 'üíâ',
    },
    {
        id: '3',
        title: 'Tim m·∫°ch',
        subtitle: '15 Th√¥ng tin chi ti·∫øt',
        backgroundColor: '#ef4444',
        icon: '‚ù§Ô∏è',
    },
    {
        id: '4',
        title: 'H√¥ h·∫•p',
        subtitle: '8 Th√¥ng tin chi ti·∫øt',
        backgroundColor: '#06b6d4',
        icon: 'ü´Å',
    },
    {
        id: '5',
        title: 'Ti√™u h√≥a',
        subtitle: '12 Th√¥ng tin chi ti·∫øt',
        backgroundColor: '#84cc16',
        icon: 'ü´Ä',
    },
    {
        id: '6',
        title: 'T√¢m l√Ω',
        subtitle: '20 Th√¥ng tin chi ti·∫øt',
        backgroundColor: '#8b5cf6',
        icon: 'üß†',
    },
];

const HEALTH_TIPS = [
    { id: '1', title: 'S·ª©c kh·ªèe tim m·∫°ch', icon: 'üíõ', backgroundColor: '#fb923c' },
    { id: '2', title: 'Gi·∫£m cƒÉng th·∫≥ng', icon: 'üßò', backgroundColor: '#3b82f6' },
    { id: '3', title: 'Gi·∫•c ng·ªß ngon', icon: 'üò¥', backgroundColor: '#10b981' },
    { id: '4', title: 'T·∫≠p th·ªÉ d·ª•c', icon: 'üèÉ', backgroundColor: '#f59e0b' },
    { id: '5', title: 'Dinh d∆∞·ª°ng', icon: 'ü•ó', backgroundColor: '#22c55e' },
    { id: '6', title: 'T√¢m l√Ω', icon: 'üß†', backgroundColor: '#8b5cf6' },
];

const RECIPES = [
    { id: '1', title: 'B·ªôt y·∫øn m·∫°ch tr√°i c√¢y', imageEmoji: 'ü•£', backgroundColor: '#fef3c7' },
    { id: '2', title: 'Tr·ª©ng n∆∞·ªõng th∆°m ngon', imageEmoji: 'üç≥', backgroundColor: '#fed7aa' },
    { id: '3', title: 'Salad t∆∞∆°i m√°t', imageEmoji: 'ü•ó', backgroundColor: '#d1fae5' },
    { id: '4', title: 'Smoothie xanh', imageEmoji: 'ü•§', backgroundColor: '#dcfce7' },
    { id: '5', title: 'C√° h·ªìi n∆∞·ªõng', imageEmoji: 'üêü', backgroundColor: '#e0f2fe' },
    { id: '6', title: 'Ch√°o y·∫øn m·∫°ch', imageEmoji: 'üç≤', backgroundColor: '#fef7cd' },
];

export default function LifestyleScreen() {
    const router = useRouter();
    const [activeTab, setActiveTab] = useState('all');

    return (
        <SafeAreaView style={styles.safeArea} edges={[ 'bottom', 'left', 'right']}>
            <StatusBar barStyle="dark-content" />
            <View style={styles.container}>
                {/* Header */}
                

                {/* Tab Bar */}
                <TabBar tabs={TABS} activeTab={activeTab} onTabChange={setActiveTab} />

                {/* Content */}
                <ScrollView
                    style={styles.scrollView}
                    showsVerticalScrollIndicator={false}
                    contentContainerStyle={styles.scrollContent}
                >
                    {activeTab === 'sleep' ? (
                        // Tab Ng·ªß ngon h∆°n - hi·ªÉn th·ªã t·∫•t c·∫£ video
                        <View style={styles.tabContent}>
                            <Text style={styles.tabDescription}>
                                Kh√°m ph√° c√°c video gi√∫p b·∫°n c√≥ gi·∫•c ng·ªß ngon v√† s√¢u h∆°n
                            </Text>
                            <View style={styles.grid}>
                                {SLEEP_VIDEOS.map((video) => (
                                    <View key={video.id} style={styles.gridItem}>
                                        <VideoCard
                                            title={video.title}
                                            backgroundColor={video.backgroundColor}
                                            onPress={() => { }}
                                        />
                                    </View>
                                ))}
                            </View>
                        </View>
                    ) : activeTab === 'health-check' ? (
                        // Tab Ki·ªÉm tra s·ª©c kh·ªèe - hi·ªÉn th·ªã t·∫•t c·∫£ health checks
                        <View style={styles.tabContent}>
                            <Text style={styles.tabDescription}>
                                T·ª± ki·ªÉm tra s·ª©c kh·ªèe c·ªßa b·∫°n v·ªõi c√°c b√†i test nhanh ch√≥ng v√† ch√≠nh x√°c
                            </Text>
                            <View style={styles.grid}>
                                {HEALTH_CHECKS.map((check) => (
                                    <View key={check.id} style={styles.gridItem}>
                                        <HealthCheckCard
                                            title={check.title}
                                            subtitle={check.subtitle}
                                            duration={check.duration}
                                            questions={check.questions}
                                            icon={check.icon}
                                            backgroundColor={check.backgroundColor}
                                            onPress={() => { }}
                                        />
                                    </View>
                                ))}
                            </View>
                        </View>
                    ) : activeTab === 'articles' ? (
                        // Tab B√†i vi·∫øt - hi·ªÉn th·ªã t·∫•t c·∫£ articles
                        <View style={styles.tabContent}>
                            <Text style={styles.tabDescription}>
                                Kh√°m ph√° c√°c b√†i vi·∫øt h·ªØu √≠ch v·ªÅ s·ª©c kh·ªèe v√† l·ªëi s·ªëng
                            </Text>
                            <View style={styles.articlesContainer}>
                                {ARTICLES.map((article) => (
                                    <ArticleCard
                                        key={article.id}
                                        title={article.title}
                                        subtitle={article.subtitle}
                                        backgroundColor={article.backgroundColor}
                                        icon={article.icon}
                                        onPress={() => { }}
                                    />
                                ))}
                            </View>
                        </View>
                    ) : activeTab === 'health-tips' ? (
                        // Tab M·∫πo s·ª©c kh·ªèe - hi·ªÉn th·ªã t·∫•t c·∫£ health tips
                        <View style={styles.tabContent}>
                            <Text style={styles.tabDescription}>
                                C√°c m·∫πo s·ª©c kh·ªèe h·ªØu √≠ch ƒë·ªÉ b·∫°n c√≥ cu·ªôc s·ªëng kh·ªèe m·∫°nh h∆°n
                            </Text>
                            <View style={styles.grid}>
                                {HEALTH_TIPS.map((tip) => (
                                    <View key={tip.id} style={styles.gridItem}>
                                        <TipCard
                                            title={tip.title}
                                            icon={tip.icon}
                                            backgroundColor={tip.backgroundColor}
                                            onPress={() => { }}
                                        />
                                    </View>
                                ))}
                            </View>
                        </View>
                    ) : activeTab === 'recipes' ? (
                        // Tab C√¥ng th·ª©c n·∫•u ƒÉn - hi·ªÉn th·ªã t·∫•t c·∫£ recipes
                        <View style={styles.tabContent}>
                            <Text style={styles.tabDescription}>
                                C√°c c√¥ng th·ª©c n·∫•u ƒÉn ngon v√† b·ªï d∆∞·ª°ng cho s·ª©c kh·ªèe
                            </Text>
                            <View style={styles.grid}>
                                {RECIPES.map((recipe) => (
                                    <View key={recipe.id} style={styles.gridItem}>
                                        <RecipeCard
                                            title={recipe.title}
                                            imageEmoji={recipe.imageEmoji}
                                            backgroundColor={recipe.backgroundColor}
                                            onPress={() => { }}
                                        />
                                    </View>
                                ))}
                            </View>
                        </View>
                    ) : (
                        // Tab T·∫§T C·∫¢ - hi·ªÉn th·ªã t·∫•t c·∫£ sections
                        <>
                            {/* Ng·ªß ngon h∆°n Section */}
                            <View style={styles.section}>
                                <SectionHeader title="Ng·ªß ngon h∆°n" //  onSeeAllPress={() => router.push("/../components/component_LoiSong/ScreenComponents/ScreenSleepVideo")} 
                                />
                                <ScrollView
                                    horizontal
                                    showsHorizontalScrollIndicator={false}
                                    contentContainerStyle={styles.horizontalScrollContent}
                                >
                                    {SLEEP_VIDEOS.map((video) => (
                                        <View key={video.id} style={styles.cardWrapper}>
                                            <VideoCard
                                                title={video.title}
                                                backgroundColor={video.backgroundColor}
                                                onPress={() => { }}
                                            />
                                        </View>
                                    ))}
                                </ScrollView>
                            </View>

                            {/* Ki·ªÉm tra s·ª©c kh·ªèe Section */}
                            <View style={styles.section}>
                                <SectionHeader title="Ki·ªÉm tra s·ª©c kh·ªèe" // onSeeAllPress={() => router.push('/../components/component_LoiSong/ScreenComponents/ScreenHealthChecks')} 
                                  />
                                <ScrollView
                                    horizontal
                                    showsHorizontalScrollIndicator={false}
                                    contentContainerStyle={styles.horizontalScrollContent}
                                >
                                    {HEALTH_CHECKS.map((check) => (
                                        <View key={check.id} style={styles.cardWrapper}>
                                            <HealthCheckCard
                                                title={check.title}
                                                subtitle={check.subtitle}
                                                duration={check.duration}
                                                questions={check.questions}
                                                icon={check.icon}
                                                backgroundColor={check.backgroundColor}
                                                onPress={() => { }}
                                            />
                                        </View>
                                    ))}
                                </ScrollView>
                            </View>

                            {/* B√†i vi·∫øt Section */}
                            <View style={styles.section}>
                                <SectionHeader title="B√†i vi·∫øt" // onSeeAllPress={() => router.push('/lifestyle/articles')} 
                                  />
                                <View style={styles.articlesContainer}>
                                    {ARTICLES.map((article) => (
                                        <ArticleCard
                                            key={article.id}
                                            title={article.title}
                                            subtitle={article.subtitle}
                                            backgroundColor={article.backgroundColor}
                                            icon={article.icon}
                                            onPress={() => { }}
                                        />
                                    ))}
                                </View>
                            </View>

                            {/* M·∫πo S·ª©c kh·ªèe Section */}
                            <View style={styles.section}>
                                <SectionHeader title="M·∫πo S·ª©c kh·ªèe" // onSeeAllPress={() => router.push('/lifestyle/health-tips')} 
                                  />
                                <ScrollView
                                    horizontal
                                    showsHorizontalScrollIndicator={false}
                                    contentContainerStyle={styles.horizontalScrollContent}
                                >
                                    {HEALTH_TIPS.map((tip) => (
                                        <View key={tip.id} style={styles.cardWrapper}>
                                            <TipCard
                                                title={tip.title}
                                                icon={tip.icon}
                                                backgroundColor={tip.backgroundColor}
                                                onPress={() => { }}
                                            />
                                        </View>
                                    ))}
                                </ScrollView>
                            </View>

                            {/* C√¥ng th·ª©c n·∫•u ƒÉn Section */}
                            <View style={styles.section}>
                                <SectionHeader title="C√¥ng th·ª©c n·∫•u ƒÉn" // onSeeAllPress={() => router.push('/lifestyle/recipes')} 
                                  />
                                <ScrollView
                                    horizontal
                                    showsHorizontalScrollIndicator={false}
                                    contentContainerStyle={styles.horizontalScrollContent}
                                >
                                    {RECIPES.map((recipe) => (
                                        <View key={recipe.id} style={styles.cardWrapper}>
                                            <RecipeCard
                                                title={recipe.title}
                                                imageEmoji={recipe.imageEmoji}
                                                backgroundColor={recipe.backgroundColor}
                                                onPress={() => { }}
                                            />
                                        </View>
                                    ))}
                                </ScrollView>
                            </View>
                        </>
                    )}

                    {/* Bottom Spacing */}
                    <View style={styles.bottomSpacing} />
                </ScrollView>
            </View>
        </SafeAreaView>
    );
}

const styles = StyleSheet.create({
  safeArea: {
    flex: 1,
    backgroundColor: '#f1f5f9', // n·ªÅn t·ªïng th·ªÉ s√°ng nh·∫π
  },
  container: {
    flex: 1,
    backgroundColor: 'transparent',
  },

  // Header (ch∆∞a d√πng, gi·ªØ nguy√™n)
  header: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between',
    paddingHorizontal: 16,
    paddingVertical: 12,
    borderBottomWidth: StyleSheet.hairlineWidth,
    borderBottomColor: '#e2e8f0',
    backgroundColor: '#ffffff',
  },
  headerTitle: {
    fontSize: 20,
    fontWeight: '700',
    color: '#0f172a',
    flex: 1,
    marginLeft: 8,
  },

  scrollView: {
    flex: 1,
  },
  scrollContent: {
    paddingTop: 12,
    paddingBottom: 40,
  },

  // Section blocks (m·ªói ph·∫ßn c√≥ n·ªÅn x√°m nh·∫π, bo g√≥c v√† ƒë·ªï b√≥ng)
  section: {
    marginHorizontal: 16,
    marginBottom: 22,
    paddingVertical: 20,
    paddingHorizontal: 16,
    borderRadius: 18,
    backgroundColor: '#f8fafc', // x√°m nh·∫°t nh·∫π
    shadowColor: '#000',
    shadowOpacity: 0.06,
    shadowRadius: 10,
    shadowOffset: { width: 0, height: 2 },
    elevation: 2, // hi·ªáu ·ª©ng ƒë·ªï b√≥ng Android
  },

  horizontalScrollContent: {
    paddingRight: 20,
    paddingVertical: 6,
  },
  cardWrapper: {
    marginRight: 14,
  },

  // Article cards trong section
  articlesContainer: {
    gap: 12,
  },

  bottomSpacing: {
    height: 50,
  },

  // Tab content
  tabContent: {
    paddingHorizontal: 16,
    paddingTop: 8,
  },
  tabDescription: {
    fontSize: 15,
    color: '#475569',
    marginBottom: 18,
    lineHeight: 22,
  },

  // Grid 2 c·ªôt
  grid: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    marginHorizontal: -8,
  },
  gridItem: {
    width: '50%',
    paddingHorizontal: 8,
    marginBottom: 16,
  },
});
